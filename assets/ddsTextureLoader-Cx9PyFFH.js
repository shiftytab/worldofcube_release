import{C as yt,S as dt}from"./passPostProcess-WgEmDRM-.js";import{A as T,R as Ct,a as ht,I as mt,_ as Ft,b as H,C as O}from"./index-BmJPcCdY.js";let N,J;function k(y){N||(N=new Float32Array(1),J=new Int32Array(N.buffer)),N[0]=y;const r=J[0];let t=r>>16&32768,a=r>>12&2047;const n=r>>23&255;return n<103?t:n>142?(t|=31744,t|=(n==255?0:1)&&r&8388607,t):n<113?(a|=2048,t|=(a>>114-n)+(a>>113-n&1),t):(t|=n-112<<10|a>>1,t+=a&1,t)}function L(y){const r=(y&32768)>>15,t=(y&31744)>>10,a=y&1023;return t===0?(r?-1:1)*Math.pow(2,-14)*(a/Math.pow(2,10)):t==31?a?NaN:(r?-1:1)*(1/0):(r?-1:1)*Math.pow(2,t-15)*(1+a/Math.pow(2,10))}T.prototype._partialLoadFile=function(y,r,t,a,n=null){const o=e=>{t[r]=e,t._internalCount++,t._internalCount===6&&a(t)},f=(e,c)=>{n&&e&&n(e.status+" "+e.statusText,c)};this._loadFile(y,o,void 0,void 0,!0,f)};T.prototype._cascadeLoadFiles=function(y,r,t,a=null){const n=[];n._internalCount=0;for(let o=0;o<6;o++)this._partialLoadFile(t[o],o,n,r,a)};T.prototype._cascadeLoadImgs=function(y,r,t,a,n=null,o){const f=[];f._internalCount=0;for(let e=0;e<6;e++)this._partialLoadImg(a[e],e,f,y,r,t,n,o)};T.prototype._partialLoadImg=function(y,r,t,a,n,o,f=null,e){const c=Ct();ht(y,u=>{t[r]=u,t._internalCount++,a&&a.removePendingData(c),t._internalCount===6&&o&&o(n,t)},(u,l)=>{a&&a.removePendingData(c),f&&f(u,l)},a?a.offlineProvider:null,e),a&&a.addPendingData(c)};T.prototype.createCubeTextureBase=function(y,r,t,a,n=null,o=null,f,e=null,c=!1,s=0,i=0,u=null,l=null,F=null,d=!1,C=null){const A=u||new mt(this,7);A.isCube=!0,A.url=y,A.generateMipMaps=!a,A._lodGenerationScale=s,A._lodGenerationOffset=i,A._useSRGBBuffer=!!d&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!a),A!==u&&(A.label=y.substring(0,60)),this._doNotHandleContextLost||(A._extension=e,A._files=t,A._buffer=C);const m=y;this._transformTextureUrl&&!u&&(y=this._transformTextureUrl(y));const B=y.split("?")[0],I=B.lastIndexOf("."),M=e||(I>-1?B.substring(I).toLowerCase():""),w=Ft(M),P=(h,G)=>{y===m?o&&h&&o(h.status+" "+h.statusText,G):(H.Warn(`Failed to load ${y}, falling back to the ${m}`),this.createCubeTextureBase(m,r,t,!!a,n,o,f,e,c,s,i,A,l,F,d,C))};if(w)w.then(h=>{const G=x=>{l&&l(A,x),h.loadCubeData(x,A,c,n,o)};C?G(C):t&&t.length===6?h.supportCascades?this._cascadeLoadFiles(r,x=>G(x.map(X=>new Uint8Array(X))),t,o):o?o("Textures type does not support cascades."):H.Warn("Texture loader does not support cascades."):this._loadFile(y,x=>G(new Uint8Array(x)),void 0,void 0,!0,P)});else{if(!t||t.length===0)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(r,A,(h,G)=>{F&&F(h,G)},t,o)}return this._internalTexturesCache.push(A),A};const _t=542327876,K=131072,Q=512,Z=4,q=64,tt=131072;function S(y){return y.charCodeAt(0)+(y.charCodeAt(1)<<8)+(y.charCodeAt(2)<<16)+(y.charCodeAt(3)<<24)}function Gt(y){return String.fromCharCode(y&255,y>>8&255,y>>16&255,y>>24&255)}const et=S("DXT1"),rt=S("DXT3"),at=S("DXT5"),v=S("DX10"),nt=113,st=116,ot=2,ft=10,bt=88,V=31,Bt=0,Rt=1,it=2,lt=3,Y=4,ct=7,$=20,ut=21,xt=22,wt=23,gt=24,Ot=25,Lt=26,Mt=28,Ut=32;class p{static GetDDSInfo(r){const t=new Int32Array(r.buffer,r.byteOffset,V),a=new Int32Array(r.buffer,r.byteOffset,V+4);let n=1;t[it]&K&&(n=Math.max(1,t[ct]));const o=t[ut],f=o===v?a[Ut]:0;let e=0;switch(o){case nt:e=2;break;case st:e=1;break;case v:if(f===ft){e=2;break}if(f===ot){e=1;break}}return{width:t[Y],height:t[lt],mipmapCount:n,isFourCC:(t[$]&Z)===Z,isRGB:(t[$]&q)===q,isLuminance:(t[$]&tt)===tt,isCube:(t[Mt]&Q)===Q,isCompressed:o===et||o===rt||o===at,dxgiFormat:f,textureType:e}}static _GetHalfFloatAsFloatRGBAArrayBuffer(r,t,a,n,o,f){const e=new Float32Array(n),c=new Uint16Array(o,a);let s=0;for(let i=0;i<t;i++)for(let u=0;u<r;u++){const l=(u+i*r)*4;e[s]=L(c[l]),e[s+1]=L(c[l+1]),e[s+2]=L(c[l+2]),p.StoreLODInAlphaChannel?e[s+3]=f:e[s+3]=L(c[l+3]),s+=4}return e}static _GetHalfFloatRGBAArrayBuffer(r,t,a,n,o,f){if(p.StoreLODInAlphaChannel){const e=new Uint16Array(n),c=new Uint16Array(o,a);let s=0;for(let i=0;i<t;i++)for(let u=0;u<r;u++){const l=(u+i*r)*4;e[s]=c[l],e[s+1]=c[l+1],e[s+2]=c[l+2],e[s+3]=k(f),s+=4}return e}return new Uint16Array(o,a,n)}static _GetFloatRGBAArrayBuffer(r,t,a,n,o,f){if(p.StoreLODInAlphaChannel){const e=new Float32Array(n),c=new Float32Array(o,a);let s=0;for(let i=0;i<t;i++)for(let u=0;u<r;u++){const l=(u+i*r)*4;e[s]=c[l],e[s+1]=c[l+1],e[s+2]=c[l+2],e[s+3]=f,s+=4}return e}return new Float32Array(o,a,n)}static _GetFloatAsHalfFloatRGBAArrayBuffer(r,t,a,n,o,f){const e=new Uint16Array(n),c=new Float32Array(o,a);let s=0;for(let i=0;i<t;i++)for(let u=0;u<r;u++)e[s]=k(c[s]),e[s+1]=k(c[s+1]),e[s+2]=k(c[s+2]),p.StoreLODInAlphaChannel?e[s+3]=k(f):e[s+3]=k(c[s+3]),s+=4;return e}static _GetFloatAsUIntRGBAArrayBuffer(r,t,a,n,o,f){const e=new Uint8Array(n),c=new Float32Array(o,a);let s=0;for(let i=0;i<t;i++)for(let u=0;u<r;u++){const l=(u+i*r)*4;e[s]=O(c[l])*255,e[s+1]=O(c[l+1])*255,e[s+2]=O(c[l+2])*255,p.StoreLODInAlphaChannel?e[s+3]=f:e[s+3]=O(c[l+3])*255,s+=4}return e}static _GetHalfFloatAsUIntRGBAArrayBuffer(r,t,a,n,o,f){const e=new Uint8Array(n),c=new Uint16Array(o,a);let s=0;for(let i=0;i<t;i++)for(let u=0;u<r;u++){const l=(u+i*r)*4;e[s]=O(L(c[l]))*255,e[s+1]=O(L(c[l+1]))*255,e[s+2]=O(L(c[l+2]))*255,p.StoreLODInAlphaChannel?e[s+3]=f:e[s+3]=O(L(c[l+3]))*255,s+=4}return e}static _GetRGBAArrayBuffer(r,t,a,n,o,f,e,c,s){const i=new Uint8Array(n),u=new Uint8Array(o,a);let l=0;for(let F=0;F<t;F++)for(let d=0;d<r;d++){const C=(d+F*r)*4;i[l]=u[C+f],i[l+1]=u[C+e],i[l+2]=u[C+c],i[l+3]=u[C+s],l+=4}return i}static _ExtractLongWordOrder(r){return r===0||r===255||r===-16777216?0:1+p._ExtractLongWordOrder(r>>8)}static _GetRGBArrayBuffer(r,t,a,n,o,f,e,c){const s=new Uint8Array(n),i=new Uint8Array(o,a);let u=0;for(let l=0;l<t;l++)for(let F=0;F<r;F++){const d=(F+l*r)*3;s[u]=i[d+f],s[u+1]=i[d+e],s[u+2]=i[d+c],u+=3}return s}static _GetLuminanceArrayBuffer(r,t,a,n,o){const f=new Uint8Array(n),e=new Uint8Array(o,a);let c=0;for(let s=0;s<t;s++)for(let i=0;i<r;i++){const u=i+s*r;f[c]=e[u],c++}return f}static UploadDDSLevels(r,t,a,n,o,f,e=-1,c,s=!0){let i=null;n.sphericalPolynomial&&(i=[]);const u=!!r.getCaps().s3tc;t.generateMipMaps=o;const l=new Int32Array(a.buffer,a.byteOffset,V);let F,d,C,A=0,m,B,I,M,w=0,P=1;if(l[Bt]!==_t){H.Error("Invalid magic number in DDS header");return}if(!n.isFourCC&&!n.isRGB&&!n.isLuminance){H.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");return}if(n.isCompressed&&!u){H.Error("Compressed textures are not supported on this platform.");return}let h=l[xt];m=l[Rt]+4;let G=!1;if(n.isFourCC)switch(F=l[ut],F){case et:P=8,w=33777;break;case rt:P=16,w=33778;break;case at:P=16,w=33779;break;case nt:G=!0,h=64;break;case st:G=!0,h=128;break;case v:{m+=5*4;let b=!1;switch(n.dxgiFormat){case ft:G=!0,h=64,b=!0;break;case ot:G=!0,h=128,b=!0;break;case bt:n.isRGB=!0,n.isFourCC=!1,h=32,b=!0;break}if(b)break}default:H.Error(["Unsupported FourCC code:",Gt(F)]);return}const x=p._ExtractLongWordOrder(l[wt]),X=p._ExtractLongWordOrder(l[gt]),j=p._ExtractLongWordOrder(l[Ot]),pt=p._ExtractLongWordOrder(l[Lt]);G&&(w=r._getRGBABufferInternalSizedFormat(n.textureType)),I=1,l[it]&K&&o!==!1&&(I=Math.max(1,l[ct]));const At=c||0,D=r.getCaps();for(let b=At;b<f;b++){for(d=l[Y],C=l[lt],M=0;M<I;++M){if(e===-1||e===M){const _=e===-1?M:0;if(!n.isCompressed&&n.isFourCC){t.format=5,A=d*C*4;let R=null;if(r._badOS||r._badDesktopOS||!D.textureHalfFloat&&!D.textureFloat)h===128?(R=p._GetFloatAsUIntRGBAArrayBuffer(d,C,a.byteOffset+m,A,a.buffer,_),i&&_==0&&i.push(p._GetFloatRGBAArrayBuffer(d,C,a.byteOffset+m,A,a.buffer,_))):h===64&&(R=p._GetHalfFloatAsUIntRGBAArrayBuffer(d,C,a.byteOffset+m,A,a.buffer,_),i&&_==0&&i.push(p._GetHalfFloatAsFloatRGBAArrayBuffer(d,C,a.byteOffset+m,A,a.buffer,_))),t.type=0;else{const W=D.textureFloat&&(s&&D.textureFloatLinearFiltering||!s),z=D.textureHalfFloat&&(s&&D.textureHalfFloatLinearFiltering||!s),E=(h===128||h===64&&!z)&&W?1:(h===64||h===128&&!W)&&z?2:0;let U,g=null;switch(h){case 128:{switch(E){case 1:U=p._GetFloatRGBAArrayBuffer,g=null;break;case 2:U=p._GetFloatAsHalfFloatRGBAArrayBuffer,g=p._GetFloatRGBAArrayBuffer;break;case 0:U=p._GetFloatAsUIntRGBAArrayBuffer,g=p._GetFloatRGBAArrayBuffer;break}break}default:{switch(E){case 1:U=p._GetHalfFloatAsFloatRGBAArrayBuffer,g=null;break;case 2:U=p._GetHalfFloatRGBAArrayBuffer,g=p._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:U=p._GetHalfFloatAsUIntRGBAArrayBuffer,g=p._GetHalfFloatAsFloatRGBAArrayBuffer;break}break}}t.type=E,R=U(d,C,a.byteOffset+m,A,a.buffer,_),i&&_==0&&i.push(g?g(d,C,a.byteOffset+m,A,a.buffer,_):R)}R&&r._uploadDataToTextureDirectly(t,R,b,_)}else if(n.isRGB)t.type=0,h===24?(t.format=4,A=d*C*3,B=p._GetRGBArrayBuffer(d,C,a.byteOffset+m,A,a.buffer,x,X,j),r._uploadDataToTextureDirectly(t,B,b,_)):(t.format=5,A=d*C*4,B=p._GetRGBAArrayBuffer(d,C,a.byteOffset+m,A,a.buffer,x,X,j,pt),r._uploadDataToTextureDirectly(t,B,b,_));else if(n.isLuminance){const R=r._getUnpackAlignement(),W=d;A=Math.floor((d+R-1)/R)*R*(C-1)+W,B=p._GetLuminanceArrayBuffer(d,C,a.byteOffset+m,A,a.buffer),t.format=1,t.type=0,r._uploadDataToTextureDirectly(t,B,b,_)}else A=Math.max(4,d)/4*Math.max(4,C)/4*P,B=new Uint8Array(a.buffer,a.byteOffset+m,A),t.type=0,r._uploadCompressedDataToTextureDirectly(t,w,d,C,B,b,_)}m+=h?d*C*(h/8):A,d*=.5,C*=.5,d=Math.max(1,d),C=Math.max(1,C)}if(c!==void 0)break}i&&i.length>0?n.sphericalPolynomial=yt.ConvertCubeMapToSphericalPolynomial({size:l[Y],right:i[0],left:i[1],up:i[2],down:i[3],front:i[4],back:i[5],format:5,type:1,gammaSpace:!1}):n.sphericalPolynomial=void 0}}p.StoreLODInAlphaChannel=!1;class Dt{constructor(){this.supportCascades=!0}loadCubeData(r,t,a,n){const o=t.getEngine();let f,e=!1,c=1e3;if(Array.isArray(r))for(let s=0;s<r.length;s++){const i=r[s];f=p.GetDDSInfo(i),t.width=f.width,t.height=f.height,e=(f.isRGB||f.isLuminance||f.mipmapCount>1)&&t.generateMipMaps,o._unpackFlipY(f.isCompressed),p.UploadDDSLevels(o,t,i,f,e,6,-1,s),!f.isFourCC&&f.mipmapCount===1?o.generateMipMapsForCubemap(t):c=f.mipmapCount-1}else{const s=r;f=p.GetDDSInfo(s),t.width=f.width,t.height=f.height,a&&(f.sphericalPolynomial=new dt),e=(f.isRGB||f.isLuminance||f.mipmapCount>1)&&t.generateMipMaps,o._unpackFlipY(f.isCompressed),p.UploadDDSLevels(o,t,s,f,e,6),!f.isFourCC&&f.mipmapCount===1?o.generateMipMapsForCubemap(t,!1):c=f.mipmapCount-1}o._setCubeMapTextureParams(t,e,c),t.isReady=!0,t.onLoadedObservable.notifyObservers(t),t.onLoadedObservable.clear(),n&&n({isDDS:!0,width:t.width,info:f,data:r,texture:t})}loadData(r,t,a){const n=p.GetDDSInfo(r),o=(n.isRGB||n.isLuminance||n.mipmapCount>1)&&t.generateMipMaps&&Math.max(n.width,n.height)>>n.mipmapCount-1===1;a(n.width,n.height,o,n.isFourCC,()=>{p.UploadDDSLevels(t.getEngine(),t,r,n,o,1)})}}export{Dt as _DDSTextureLoader};
